"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/home/timeline.tsx":
/*!**************************************!*\
  !*** ./components/home/timeline.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/src/_object_spread_props.mjs */ \"./node_modules/@swc/helpers/src/_object_spread_props.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ \"./constants.ts\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_dist_ScrollTrigger__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! gsap/dist/ScrollTrigger */ \"./node_modules/gsap/dist/ScrollTrigger.js\");\n/* harmony import */ var gsap_dist_ScrollTrigger__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(gsap_dist_ScrollTrigger__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var pages__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! pages */ \"./pages/index.tsx\");\n\n\nvar _this = undefined;\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nvar svgColor = \"#9CA3AF\";\nvar animColor = \"#FCD34D\";\nvar separation = 450;\nvar strokeWidth = 2;\nvar leftBranchX = 13;\nvar curveLength = 150;\nvar dotSize = 26;\nvar TimelineSection = function(param) {\n    var isDesktop = param.isDesktop;\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(400), svgWidth = ref[0], setSvgWidth = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(109), rightBranchX = ref1[0], setRightBranchX = ref1[1];\n    var svgCheckpointItems = _constants__WEBPACK_IMPORTED_MODULE_2__.TIMELINE.filter(function(item) {\n        return item.type === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CHECKPOINT && item.shouldDrawLine;\n    });\n    var svgLength = (svgCheckpointItems === null || svgCheckpointItems === void 0 ? void 0 : svgCheckpointItems.length) * separation;\n    var timelineSvg = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var svgContainer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var screenContainer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    var addNodeRefsToItems = function(timeline) {\n        return timeline.map(function(node, idx) {\n            return (0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, node), {\n                next: timeline[idx + 1],\n                prev: timeline[idx - 1]\n            });\n        });\n    };\n    var generateTimelineSvg = function(timeline) {\n        var index = 1;\n        var y = dotSize / 2;\n        var timelineStyle = \"<style>.str, .dot{stroke-width: \".concat(strokeWidth, \"px}.anim-branch{stroke-dasharray: 186}</style>\");\n        var isDiverged = false;\n        var timelineSvg = addNodeRefsToItems(timeline).reduce(function(svg, node) {\n            var type = node.type, next = node.next;\n            var lineY = y;\n            var dotY = y + separation / 2;\n            switch(type){\n                case _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CHECKPOINT:\n                    {\n                        var shouldDrawLine = node.shouldDrawLine;\n                        // special handling for last checkpoint\n                        if (!next) {\n                            lineY = y - separation / 2;\n                        }\n                        // special handling for dot without line\n                        if (!shouldDrawLine) {\n                            dotY = y;\n                        }\n                        if (shouldDrawLine) {\n                            // TO DO fix syntax\n                            svg = shouldDrawLine ? \"\".concat(drawLine(node, lineY, index, isDiverged)).concat(svg) : svg;\n                            y = y + separation;\n                            index++;\n                        }\n                        svg = svg.concat(drawDot(node, dotY, isDiverged));\n                    }\n                    break;\n                case _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.DIVERGE:\n                    {\n                        isDiverged = true;\n                        svg = \"\".concat(drawBranch(node, y, index)).concat(svg);\n                    }\n                    break;\n                case _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CONVERGE:\n                    {\n                        isDiverged = false;\n                        // Drawing CONVERGE branch with previous line and index\n                        svg = \"\".concat(drawBranch(node, y - separation, index - 1)).concat(svg);\n                    }\n                    break;\n            }\n            return svg;\n        }, timelineStyle);\n        return timelineSvg;\n    };\n    var getDotString = function(x, y) {\n        return \"<rect class='dot' width=\".concat(dotSize, \" height=\").concat(dotSize, \" fill='#111827' x=\").concat(x - dotSize / 2, \" y=\").concat(y - dotSize / 2, \" ></rect><circle cx=\").concat(x, \" cy=\").concat(y, \" r='7' stroke=\").concat(svgColor, \" class='dot' ></circle>\");\n    };\n    var drawDot = function(timelineNode, y, isDiverged) {\n        var next = timelineNode.next, alignment = timelineNode.alignment;\n        // Diverging\n        if (next && next.type === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.DIVERGE) {\n            y = y - curveLength + 6 * dotSize;\n        }\n        // Converging\n        if (next && next.type === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CONVERGE) {\n            y = y + curveLength - 6 * dotSize;\n        }\n        var dotString = getDotString(alignment === _constants__WEBPACK_IMPORTED_MODULE_2__.Branch.LEFT ? leftBranchX : rightBranchX, y);\n        var textString = addText(timelineNode, y, isDiverged);\n        return \"\".concat(textString).concat(dotString);\n    };\n    var addText = function(timelineNode, y, isDiverged) {\n        var title = timelineNode.title, subtitle = timelineNode.subtitle, size = timelineNode.size, image = timelineNode.image;\n        var offset = isDiverged ? rightBranchX : 10;\n        var foreignObjectX = dotSize / 2 + 10 + offset;\n        var foreignObjectY = y - dotSize / 2;\n        var foreignObjectWidth = svgWidth - (dotSize / 2 + 10 + offset);\n        var titleSizeClass = size === _constants__WEBPACK_IMPORTED_MODULE_2__.ItemSize.LARGE ? \"text-6xl\" : \"text-2xl\";\n        var logoString = image ? \"<img src='\".concat(image, \"' class='h-18 mb-2' loading='lazy' width='200' height='64' alt='\").concat(image, \"' />\") : \"\";\n        var subtitleString = subtitle ? \"<p class='text-xl mt-2 text-gray-200 font-medium tracking-wide'>\".concat(subtitle, \"</p>\") : \"\";\n        return \"<foreignObject x=\".concat(foreignObjectX, \" y=\").concat(foreignObjectY, \" width=\").concat(foreignObjectWidth, \" \\n        height=\").concat(separation, \">\").concat(logoString, \"<p class='\").concat(titleSizeClass, \"'>\").concat(title, \"</p>\").concat(subtitleString, \"</foreignObject>\");\n    };\n    var drawLine = function(timelineNode, y, i, isDiverged) {\n        var alignment = timelineNode.alignment, prev = timelineNode.prev, next = timelineNode.next;\n        var isPrevDiverge = prev && prev.type === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.DIVERGE;\n        var isNextConverge = next && next.type === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CONVERGE;\n        var lineY = Math.abs(y + separation);\n        // Smaller line for Diverging\n        if (isPrevDiverge) {\n            return \"<line class='str' x1=\".concat(leftBranchX, \" y1=\").concat(y, \" x2=\").concat(leftBranchX, \" y2=\").concat(lineY, \" stroke=\").concat(svgColor, \" /><line class='str line-\").concat(i, \"' x1=\").concat(leftBranchX, \" y1=\").concat(y, \" x2=\").concat(leftBranchX, \" y2=\").concat(lineY, \" stroke=\").concat(animColor, \" />\");\n        }\n        // Smaller line for Converging\n        if (isNextConverge) {\n            return \"<line class='str' x1=\".concat(leftBranchX, \" y1=\").concat(y, \" x2=\").concat(leftBranchX, \" y2=\").concat(lineY, \" stroke=\").concat(svgColor, \" /><line class='str line-\").concat(i, \"' x1=\").concat(leftBranchX, \" y1=\").concat(y, \" x2=\").concat(leftBranchX, \" y2=\").concat(lineY, \" stroke=\").concat(animColor, \" />\");\n        }\n        var lineX = alignment === _constants__WEBPACK_IMPORTED_MODULE_2__.Branch.LEFT ? leftBranchX : rightBranchX;\n        var str = \"<line class='str' x1=\".concat(lineX, \" y1=\").concat(y, \" x2=\").concat(lineX, \" y2=\").concat(lineY, \" stroke=\").concat(svgColor, \" /><line class='str line-\").concat(i, \"' x1=\").concat(lineX, \" y1=\").concat(y, \" x2=\").concat(lineX, \" y2=\").concat(lineY, \" stroke=\").concat(animColor, \" />\");\n        // If already diverged, draw parallel line to the existing line\n        if (isDiverged) {\n            var divergedLineX = alignment === _constants__WEBPACK_IMPORTED_MODULE_2__.Branch.LEFT ? rightBranchX : leftBranchX;\n            str = str.concat(\"<line class='str' x1=\".concat(divergedLineX, \" y1=\").concat(y, \" x2=\").concat(divergedLineX, \" y2=\").concat(lineY, \" stroke=\").concat(svgColor, \" /><line class='str line-\").concat(i, \"' x1=\").concat(divergedLineX, \" y1=\").concat(y, \" x2=\").concat(divergedLineX, \" y2=\").concat(lineY, \" stroke=\").concat(animColor, \" />\"));\n        }\n        return str;\n    };\n    var drawBranch = function(timelineNode, y, i) {\n        var type = timelineNode.type;\n        switch(type){\n            case _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.DIVERGE:\n                return \"<path class='str' d='M \".concat(leftBranchX, \" \").concat(y, \" C \").concat(leftBranchX, \" \").concat(y + curveLength / 2, \" \").concat(rightBranchX, \" \").concat(y + curveLength / 2, \" \").concat(rightBranchX, \" \").concat(y + curveLength, \"' stroke=\").concat(svgColor, \" /><line class='str' x1=\").concat(rightBranchX, \" y1=\").concat(y + curveLength, \" x2=\").concat(rightBranchX, \" y2=\").concat(y + separation, \" stroke=\").concat(svgColor, \" /><path class='str anim-branch branch-\").concat(i, \"' d='M \").concat(leftBranchX, \" \").concat(y, \" C \").concat(leftBranchX, \" \").concat(y + curveLength / 2, \" \").concat(rightBranchX, \" \").concat(y + curveLength / 2, \" \").concat(rightBranchX, \" \").concat(y + curveLength, \"' stroke=\").concat(animColor, \" /><line class='str branch-line-\").concat(i, \"' x1=\").concat(rightBranchX, \" y1=\").concat(y + curveLength, \" x2=\").concat(rightBranchX, \" y2=\").concat(y + separation, \" stroke=\").concat(animColor, \" />\");\n            case _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CONVERGE:\n                return \"<path class='str' d='M \".concat(rightBranchX, \" \").concat(y + separation - curveLength, \" C \").concat(rightBranchX, \" \").concat(y + separation - curveLength + curveLength / 2, \" \").concat(leftBranchX, \" \").concat(y + separation - curveLength + curveLength / 2, \" \").concat(leftBranchX, \" \").concat(y + separation, \"' stroke=\").concat(svgColor, \" /><line class='str' x1=\").concat(rightBranchX, \" y1=\").concat(y, \" x2=\").concat(rightBranchX, \" y2=\").concat(Math.abs(y + separation - curveLength), \" stroke=\").concat(svgColor, \" /><path class='str anim-branch branch-\").concat(i, \"' d='M \").concat(rightBranchX, \" \").concat(y + separation - curveLength, \" C \").concat(rightBranchX, \" \").concat(y + separation - curveLength + curveLength / 2, \" \").concat(leftBranchX, \" \").concat(y + separation - curveLength + curveLength / 2, \" \").concat(leftBranchX, \" \").concat(y + separation, \"' stroke=\").concat(animColor, \" /><line class='str branch-line-\").concat(i, \"' x1=\").concat(rightBranchX, \" y1=\").concat(y, \" x2=\").concat(rightBranchX, \" y2=\").concat(Math.abs(y + separation - curveLength), \" stroke=\").concat(animColor, \" />\");\n            default:\n                return \"\";\n        }\n    };\n    var addLineSvgAnimation = function(timeline, duration, index) {\n        var startTime = \"start+=\".concat(duration * index);\n        timeline.from(svgContainer.current.querySelectorAll(\".line-\".concat(index + 1)), {\n            scaleY: 0,\n            duration: duration\n        }, startTime);\n        return timeline;\n    };\n    var addDivergingBranchLineAnimation = function(timeline, duration, index) {\n        timeline.from(svgContainer.current.querySelector(\".line-\".concat(index + 1)), {\n            scaleY: 0,\n            duration: duration\n        }, \"start+=\".concat(duration * index)).from(svgContainer.current.querySelector(\".branch-\".concat(index + 1)), {\n            strokeDashoffset: 186,\n            duration: duration - 2\n        }, \"start+=\".concat(duration * index)).from(svgContainer.current.querySelector(\".branch-line-\".concat(index + 1)), {\n            scaleY: 0,\n            duration: duration - 1\n        }, \"start+=\".concat(duration * (index + 1) - 2));\n        return timeline;\n    };\n    var addConvergingBranchLineAnimation = function(timeline, duration, index) {\n        timeline.from(svgContainer.current.querySelector(\".line-\".concat(index + 1)), {\n            scaleY: 0,\n            duration: duration\n        }, \"start+=\".concat(duration * index)).from(svgContainer.current.querySelector(\".branch-line-\".concat(index + 1)), {\n            scaleY: 0,\n            duration: duration - 1\n        }, \"start+=\".concat(duration * index)).from(svgContainer.current.querySelector(\".branch-\".concat(index + 1)), {\n            strokeDashoffset: 186,\n            duration: duration - 2\n        }, \"start+=\".concat(duration * (index + 1) - 1));\n        return timeline;\n    };\n    var animateTimeline = function(timeline, duration) {\n        var index = 0;\n        addNodeRefsToItems(_constants__WEBPACK_IMPORTED_MODULE_2__.TIMELINE).forEach(function(item) {\n            var type = item.type;\n            if (type === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CHECKPOINT && item.shouldDrawLine) {\n                var next = item.next, prev = item.prev;\n                if ((prev === null || prev === void 0 ? void 0 : prev.type) === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.DIVERGE) {\n                    addDivergingBranchLineAnimation(timeline, duration, index);\n                } else if ((next === null || next === void 0 ? void 0 : next.type) === _constants__WEBPACK_IMPORTED_MODULE_2__.NodeTypes.CONVERGE) {\n                    addConvergingBranchLineAnimation(timeline, duration, index);\n                } else {\n                    addLineSvgAnimation(timeline, duration, index);\n                }\n                index++;\n            }\n        });\n    };\n    var setTimelineSvg = function(svgContainer, timelineSvg) {\n        var containerWidth = svgContainer.current.clientWidth;\n        setSvgWidth(containerWidth);\n        var resultSvgString = generateTimelineSvg(_constants__WEBPACK_IMPORTED_MODULE_2__.TIMELINE);\n        timelineSvg.current.innerHTML = resultSvgString;\n        if ((0,pages__WEBPACK_IMPORTED_MODULE_4__.isSmallScreen)()) {\n            setRightBranchX(70);\n        }\n    };\n    var setSlidesAnimation = function(timeline) {\n        svgCheckpointItems.forEach(function(_, index) {\n            // all except the first slide\n            if (index !== 0) {\n                timeline.fromTo(screenContainer.current.querySelector(\".slide-\".concat(index + 1)), {\n                    opacity: 0\n                }, {\n                    opacity: 1\n                });\n            }\n            // all except the last slide\n            if (index !== svgCheckpointItems.length - 1) {\n                timeline.to(screenContainer.current.querySelector(\".slide-\".concat(index + 1)), {\n                    opacity: 0,\n                    delay: 2.35\n                });\n            }\n        });\n    };\n    var initScrollTrigger = function() {\n        var timeline = gsap__WEBPACK_IMPORTED_MODULE_7__.gsap.timeline({\n            defaults: {\n                ease: gsap__WEBPACK_IMPORTED_MODULE_7__.Linear.easeNone,\n                duration: 0.44\n            }\n        }).addLabel(\"start\");\n        var duration;\n        var trigger;\n        var start;\n        var end;\n        var additionalConfig = {};\n        // Slide as a trigger for Desktop\n        if (isDesktop && !(0,pages__WEBPACK_IMPORTED_MODULE_4__.isSmallScreen)()) {\n            // Animation for right side slides\n            setSlidesAnimation(timeline);\n            var platformHeight = screenContainer.current.getBoundingClientRect().height;\n            trigger = screenContainer.current;\n            start = \"top \".concat((window.innerHeight - platformHeight) / 2);\n            end = \"+=\".concat(svgLength - platformHeight);\n            additionalConfig = {\n                pin: true,\n                pinSpacing: true\n            };\n            duration = timeline.totalDuration() / 15;\n        } else {\n            // Clearing out the right side on mobile devices\n            screenContainer.current.innerHTML = \"\";\n            trigger = svgContainer.current;\n            start = \"top center\";\n            end = \"+=\".concat(svgLength);\n            duration = 3;\n        }\n        gsap_dist_ScrollTrigger__WEBPACK_IMPORTED_MODULE_8__.ScrollTrigger.create((0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, additionalConfig), {\n            trigger: trigger,\n            start: start,\n            end: end,\n            scrub: 0,\n            animation: timeline\n        }));\n        return {\n            timeline: timeline,\n            duration: duration\n        };\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        // Generate and set the timeline svg\n        setTimelineSvg(svgContainer, timelineSvg);\n        var ref = initScrollTrigger(), timeline = ref.timeline, duration = ref.duration;\n        // Animation for Timeline SVG\n        animateTimeline(timeline, duration);\n    }, [\n        timelineSvg,\n        svgContainer,\n        svgWidth,\n        rightBranchX,\n        screenContainer,\n        isDesktop,\n        svgLength, \n    ]);\n    var renderSlides = function() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"max-w-full h-96 shadow-xl bg-gray-800 rounded-2xl overflow-hidden\",\n            ref: screenContainer,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_3___default()), {\n                    className: \"w-full h-8\",\n                    src: \"/timeline/title-bar.png\",\n                    alt: \"Title bar\",\n                    width: 644,\n                    height: 34\n                }, void 0, false, {\n                    fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                    lineNumber: 459,\n                    columnNumber: 7\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative h-full w-full -mt-2\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"absolute top-0 left-0 h-full w-full\",\n                        children: svgCheckpointItems.map(function(item, index) {\n                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_3___default()), {\n                                className: \"w-full absolute top-0 object-cover slide-\".concat(index + 1),\n                                src: item.slideImage || \"\",\n                                alt: \"Timeline\",\n                                layout: \"fill\"\n                            }, \"\".concat(item.title, \"-\").concat(index), false, {\n                                fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                                lineNumber: 469,\n                                columnNumber: 13\n                            }, _this);\n                        })\n                    }, void 0, false, {\n                        fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                        lineNumber: 467,\n                        columnNumber: 9\n                    }, _this)\n                }, void 0, false, {\n                    fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                    lineNumber: 466,\n                    columnNumber: 7\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n            lineNumber: 455,\n            columnNumber: 5\n        }, _this);\n    };\n    var renderSVG = function() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            width: svgWidth,\n            height: svgLength,\n            viewBox: \"0 0 \".concat(svgWidth, \" \").concat(svgLength),\n            fill: \"none\",\n            ref: timelineSvg\n        }, void 0, false, {\n            fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n            lineNumber: 485,\n            columnNumber: 5\n        }, _this);\n    };\n    var renderSectionTitle = function() {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-col\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"section-title-sm seq\",\n                    children: \"MILESTONES\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                    lineNumber: 496,\n                    columnNumber: 7\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                    className: \"section-heading seq mt-2\",\n                    children: \"Timeline\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                    lineNumber: 497,\n                    columnNumber: 7\n                }, _this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                    className: \"text-2xl md:max-w-2xl w-full seq mt-2\",\n                    children: \"A quick recap of proud moments\"\n                }, void 0, false, {\n                    fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                    lineNumber: 498,\n                    columnNumber: 7\n                }, _this)\n            ]\n        }, void 0, true, {\n            fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n            lineNumber: 495,\n            columnNumber: 5\n        }, _this);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n        className: \"w-full relative select-none min-h-screen section-container py-8 flex flex-col justify-center\",\n        id: _constants__WEBPACK_IMPORTED_MODULE_2__.MENULINKS[3].ref,\n        children: [\n            renderSectionTitle(),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-12 gap-4 mt-20\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"col-span-12 md:col-span-6 line-svg\",\n                        ref: svgContainer,\n                        children: renderSVG()\n                    }, void 0, false, {\n                        fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                        lineNumber: 511,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"col-span-12 md:col-span-6 md:flex hidden\",\n                        children: renderSlides()\n                    }, void 0, false, {\n                        fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                        lineNumber: 514,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n                lineNumber: 510,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\FCLIENTS\\\\ZTM\\\\fullstack\\\\mattgodev\\\\portfolio2022\\\\components\\\\home\\\\timeline.tsx\",\n        lineNumber: 505,\n        columnNumber: 5\n    }, _this);\n};\n_s(TimelineSection, \"1KgfQz1BTH+3WePf8U8HBSI2ukM=\");\n_c = TimelineSection;\n/* harmony default export */ __webpack_exports__[\"default\"] = (TimelineSection);\nvar _c;\n$RefreshReg$(_c, \"TimelineSection\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/home/timeline.tsx\n"));

/***/ })

});